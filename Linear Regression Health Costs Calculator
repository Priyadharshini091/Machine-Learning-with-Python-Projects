Linear Regression Health Costs Calculator
import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score
import matplotlib.pyplot as plt
import seaborn as sns

# Load the dataset (replace with your dataset path)
data = pd.read_csv(r'C:\Users\admin\Downloads\dataset\data1\insurance.csv')

# Display the first few rows of the data
print(data.head())

# Encode categorical variables
data['sex'] = data['sex'].map({'male': 0, 'female': 1})
data['smoker'] = data['smoker'].map({'yes': 1, 'no': 0})
data['region'] = data['region'].astype('category').cat.codes

# Define input (X) and output (y)
X = data[['age', 'bmi', 'children', 'sex', 'smoker', 'region']]
y = data['children']

# Split the data into training and testing sets (80% train, 20% test)
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Create the Linear Regression model
model = LinearRegression()
model.fit(X_train, y_train)

# Make predictions
y_pred = model.predict(X_test)

# Model Evaluation
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

print(f"\nMean Squared Error: {mse}")
print(f"RÂ² Score: {r2}")

# Plot actual vs predicted values
plt.figure(figsize=(8, 6))
sns.scatterplot(x=y_test, y=y_pred)
plt.xlabel("Actual Costs")
plt.ylabel("Predicted Costs")
plt.title("Actual vs Predicted Health Insurance Costs")
plt.show()

# Prediction Function
def predict_health_cost(age, bmi, children, sex, smoker, region):
    input_data = np.array([[age, bmi, children, sex, smoker, region]])
    predicted_cost = model.predict(input_data)[0]
    return predicted_cost

# Example Prediction
age = 30
bmi = 25.0
children = 1
sex = 0          # 0 = Male, 1 = Female
smoker = 1       # 0 = No, 1 = Yes
region = 2       # Region code (based on dataset)

predicted_cost = predict_health_cost(age, bmi, children, sex, smoker, region)
print(f"\nPredicted Health Insurance Cost: ${predicted_cost:.2f}")
