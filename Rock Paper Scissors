import numpy as np
from sklearn.linear_model import LogisticRegression
import random


moves = {"rock": 0, "paper": 1, "scissors": 2}
reverse_moves = {0: "rock", 1: "paper", 2: "scissors"}


X = []
y = []


model = LogisticRegression()

def get_winner(user_move, ai_move):
    if user_move == ai_move:
        return "It's a draw!"
    elif (user_move == "rock" and ai_move == "scissors") or \
         (user_move == "paper" and ai_move == "rock") or \
         (user_move == "scissors" and ai_move == "paper"):
        return "You win!"
    else:
        return "AI wins!"

print("Let's play Rock Paper Scissors! Type 'exit' to quit.")

while True:
    user_move = input("\nChoose rock, paper, or scissors: ").lower()
    
    if user_move == 'exit':
        break
    
    if user_move not in moves:
        print("Invalid input. Try again!")
        continue
    
    
    if len(X) > 3:
        model.fit(X, y)
        prediction = model.predict([X[-1]])[0]
        ai_move = reverse_moves[(prediction + 1) % 3]  # Counter the predicted move
    else:
        ai_move = random.choice(["rock", "paper", "scissors"])

    print(f"AI chose: {ai_move}")
    result = get_winner(user_move, ai_move)
    print(result)
    
    
    X.append([moves[user_move]])
    y.append(moves[ai_move])

print("\nThanks for playing! ðŸ˜Ž")

